<!DOCTYPE html>
<!-- saved from url=(0053)https://www.qwiklabs.com/focuses/12762?parent=catalog -->
<html lang="en" data-lt-installed="true" class="mdl-js"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta content="[]" name="active-experiments">
<meta content="{&quot;userId&quot;:4265112}" name="help-api-product-data">
<meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="j1gUfQ73ILTlnhxTojVfl5bfkgEoAZyRvJPdgpt4J2aQ9bMclfRbvejFgNS1CNzc6Uo78+f84Xsjo91dTauDmQ==">
<title>Building Serverless Applications with an Event-Driven Architecture | Qwiklabs</title>
<meta content="width=device-width, initial-scale=1.0, maximum-scale=1, user-scalable=0" name="viewport">
<meta content="1rRsY0INj8RvwB5EF5pwdxt2A2P9aDgAlsICaJ0d5w0" name="google-site-verification">
<meta content="#3681E4" property="msapplication-TileColor">
<meta content="/favicon-144.png" property="msapplication-TileImage">
<meta content="This lab demonstrates how to design and develop applications based on an event-driven architecture with a serverless stack. The key services used in this lab are AWS Step Functions, Amazon API Gateway, AWS Lambda, Amazon SQS, Amazon SNS, Amazon S3, Amazon DynamoDB, and Amazon Rekognition." name="description">
<meta content="Qwiklabs" name="author">
<meta content="Building Serverless Applications with an Event-Driven Architecture | Qwiklabs" property="og:title">
<meta content="website" property="og:type">
<meta content="/favicon-144.png" property="og:image">
<meta content="Qwiklabs" property="og:site_name">
<meta content="This lab demonstrates how to design and develop applications based on an event-driven architecture with a serverless stack. The key services used in this lab are AWS Step Functions, Amazon API Gateway, AWS Lambda, Amazon SQS, Amazon SNS, Amazon S3, Amazon DynamoDB, and Amazon Rekognition." property="og:description">
<meta content="/qwiklabs_logo_900x887.png" property="og:logo" size="900x887">
<meta content="/qwiklabs_logo_994x187.png" property="og:logo" size="994x187">
<link href="https://www.qwiklabs.com/favicon-32.png" rel="shortcut icon">
<link color="#3681E4" href="https://www.qwiklabs.com/favicon-svg.svg" rel="mask-icon">
<link href="https://www.qwiklabs.com/favicon-180.png" rel="apple-touch-icon-precomposed">
<link rel="stylesheet" media="screen" href="./Building Serverless Applications with an Event-Driven Architecture_files/css">


<!--[if lt IE 9]>
<script src='http://html5shim.googlecode.com/svn/trunk/html5.js' type='text/javascript'></script>
<![endif]-->
<!--[endif]>  <![endif]-->
<script type="text/javascript" async="" src="./Building Serverless Applications with an Event-Driven Architecture_files/js"></script><script type="text/javascript" async="" src="./Building Serverless Applications with an Event-Driven Architecture_files/analytics.js"></script><script type="text/javascript" async="" src="./Building Serverless Applications with an Event-Driven Architecture_files/recaptcha__en.js" crossorigin="anonymous" integrity="sha384-Cx10SI4nRyIf/4CfTL8bj2s8I5ccz18HDscUBxSzsbe1SPnhchceoHtCw2m0nc/h"></script><script type="text/javascript" async="" src="./Building Serverless Applications with an Event-Driven Architecture_files/analytics.min.js"></script><script type="text/javascript" async="" src="./Building Serverless Applications with an Event-Driven Architecture_files/recaptcha__en.js" crossorigin="anonymous" integrity="sha384-Cx10SI4nRyIf/4CfTL8bj2s8I5ccz18HDscUBxSzsbe1SPnhchceoHtCw2m0nc/h"></script><script type="text/javascript" id="www-widgetapi-script" src="./Building Serverless Applications with an Event-Driven Architecture_files/www-widgetapi.js" async=""></script><script>
//<![CDATA[
window.gon={};gon.current_user={"firstname":"Ankit","lastname":"Manglik","fullname":"Ankit Manglik","company":"Incedo","email":"amanglik2010@gmail.com","origin":"run, direct","subscriptions":1,"id":"40881afb3090073a11cc87d2eff56386","qlCreatedAt":"2021-02-01 08:29:26 UTC","optIn":true};gon.segment="j4Im8pqIko0Lxq4wVVZWMPMM0EroHUvb";gon.deployment="run";
//]]>
</script>
<script type="application/ld+json">
{
  "@context": "http://schema.org",
  "@type": "WebSite",
  "url": "https://www.qwiklabs.com/",
  "potentialAction": {
    "@type": "SearchAction",
    "target": "https://www.qwiklabs.com/catalog?keywords={search_term_string}",
    "query-input": "required name=search_term_string"
  }
}
</script>
<script id="ze-snippet" src="./Building Serverless Applications with an Event-Driven Architecture_files/snippet.js"></script>




<link rel="stylesheet" media="all" href="./Building Serverless Applications with an Event-Driven Architecture_files/application-ef662090ea60d3c67751750b118464fad5fbb5f46be3509a5c49e43172b2b7db.css">
<script>
  EVENT_SOURCE_BASE_URL = "https://run.qwiklabs.com/nchan-sub?id=";
</script>
<script src="./Building Serverless Applications with an Event-Driven Architecture_files/webcomponents-loader-408088dc333247a761de5f2b2a4ba1cabd2bc36579f83ba92a559eb3682a9b77.js"></script>
<script src="./Building Serverless Applications with an Event-Driven Architecture_files/hallofmirrors-31ad91021e55b64d370891210d6e30d3790a1e6f4bf9e3eca92b9dd159bc8a6d.js"></script>
<custom-style>
  <style is="custom-style">[hidden] {
  display: none !important;
}

</style>
</custom-style>
<custom-style>
  <style is="custom-style">html {
  --layout_-_display:  flex;;

      --layout-inline_-_display:  inline-flex;;

      --layout-horizontal_-_display:  var(--layout_-_display); --layout-horizontal_-_-ms-flex-direction:  row; --layout-horizontal_-_-webkit-flex-direction:  row; --layout-horizontal_-_flex-direction:  row;;

      --layout-horizontal-reverse_-_display:  var(--layout_-_display); --layout-horizontal-reverse_-_-ms-flex-direction:  row-reverse; --layout-horizontal-reverse_-_-webkit-flex-direction:  row-reverse; --layout-horizontal-reverse_-_flex-direction:  row-reverse;;

      --layout-vertical_-_display:  var(--layout_-_display); --layout-vertical_-_-ms-flex-direction:  column; --layout-vertical_-_-webkit-flex-direction:  column; --layout-vertical_-_flex-direction:  column;;

      --layout-vertical-reverse_-_display:  var(--layout_-_display); --layout-vertical-reverse_-_-ms-flex-direction:  column-reverse; --layout-vertical-reverse_-_-webkit-flex-direction:  column-reverse; --layout-vertical-reverse_-_flex-direction:  column-reverse;;

      --layout-wrap_-_-ms-flex-wrap:  wrap; --layout-wrap_-_-webkit-flex-wrap:  wrap; --layout-wrap_-_flex-wrap:  wrap;;

      --layout-wrap-reverse_-_-ms-flex-wrap:  wrap-reverse; --layout-wrap-reverse_-_-webkit-flex-wrap:  wrap-reverse; --layout-wrap-reverse_-_flex-wrap:  wrap-reverse;;

      --layout-flex-auto_-_-ms-flex:  1 1 auto; --layout-flex-auto_-_-webkit-flex:  1 1 auto; --layout-flex-auto_-_flex:  1 1 auto;;

      --layout-flex-none_-_-ms-flex:  none; --layout-flex-none_-_-webkit-flex:  none; --layout-flex-none_-_flex:  none;;

      --layout-flex_-_-ms-flex:  1 1 0.000000001px; --layout-flex_-_-webkit-flex:  1; --layout-flex_-_flex:  1; --layout-flex_-_-webkit-flex-basis:  0.000000001px; --layout-flex_-_flex-basis:  0.000000001px;;

      --layout-flex-2_-_-ms-flex:  2; --layout-flex-2_-_-webkit-flex:  2; --layout-flex-2_-_flex:  2;;

      --layout-flex-3_-_-ms-flex:  3; --layout-flex-3_-_-webkit-flex:  3; --layout-flex-3_-_flex:  3;;

      --layout-flex-4_-_-ms-flex:  4; --layout-flex-4_-_-webkit-flex:  4; --layout-flex-4_-_flex:  4;;

      --layout-flex-5_-_-ms-flex:  5; --layout-flex-5_-_-webkit-flex:  5; --layout-flex-5_-_flex:  5;;

      --layout-flex-6_-_-ms-flex:  6; --layout-flex-6_-_-webkit-flex:  6; --layout-flex-6_-_flex:  6;;

      --layout-flex-7_-_-ms-flex:  7; --layout-flex-7_-_-webkit-flex:  7; --layout-flex-7_-_flex:  7;;

      --layout-flex-8_-_-ms-flex:  8; --layout-flex-8_-_-webkit-flex:  8; --layout-flex-8_-_flex:  8;;

      --layout-flex-9_-_-ms-flex:  9; --layout-flex-9_-_-webkit-flex:  9; --layout-flex-9_-_flex:  9;;

      --layout-flex-10_-_-ms-flex:  10; --layout-flex-10_-_-webkit-flex:  10; --layout-flex-10_-_flex:  10;;

      --layout-flex-11_-_-ms-flex:  11; --layout-flex-11_-_-webkit-flex:  11; --layout-flex-11_-_flex:  11;;

      --layout-flex-12_-_-ms-flex:  12; --layout-flex-12_-_-webkit-flex:  12; --layout-flex-12_-_flex:  12;;

      

      --layout-start_-_-ms-flex-align:  start; --layout-start_-_-webkit-align-items:  flex-start; --layout-start_-_align-items:  flex-start;;

      --layout-center_-_-ms-flex-align:  center; --layout-center_-_-webkit-align-items:  center; --layout-center_-_align-items:  center;;

      --layout-end_-_-ms-flex-align:  end; --layout-end_-_-webkit-align-items:  flex-end; --layout-end_-_align-items:  flex-end;;

      --layout-baseline_-_-ms-flex-align:  baseline; --layout-baseline_-_-webkit-align-items:  baseline; --layout-baseline_-_align-items:  baseline;;

      

      --layout-start-justified_-_-ms-flex-pack:  start; --layout-start-justified_-_-webkit-justify-content:  flex-start; --layout-start-justified_-_justify-content:  flex-start;;

      --layout-center-justified_-_-ms-flex-pack:  center; --layout-center-justified_-_-webkit-justify-content:  center; --layout-center-justified_-_justify-content:  center;;

      --layout-end-justified_-_-ms-flex-pack:  end; --layout-end-justified_-_-webkit-justify-content:  flex-end; --layout-end-justified_-_justify-content:  flex-end;;

      --layout-around-justified_-_-ms-flex-pack:  distribute; --layout-around-justified_-_-webkit-justify-content:  space-around; --layout-around-justified_-_justify-content:  space-around;;

      --layout-justified_-_-ms-flex-pack:  justify; --layout-justified_-_-webkit-justify-content:  space-between; --layout-justified_-_justify-content:  space-between;;

      --layout-center-center_-_-ms-flex-align:  var(--layout-center_-_-ms-flex-align); --layout-center-center_-_-webkit-align-items:  var(--layout-center_-_-webkit-align-items); --layout-center-center_-_align-items:  var(--layout-center_-_align-items); --layout-center-center_-_-ms-flex-pack:  var(--layout-center-justified_-_-ms-flex-pack); --layout-center-center_-_-webkit-justify-content:  var(--layout-center-justified_-_-webkit-justify-content); --layout-center-center_-_justify-content:  var(--layout-center-justified_-_justify-content);;

      

      --layout-self-start_-_-ms-align-self:  flex-start; --layout-self-start_-_-webkit-align-self:  flex-start; --layout-self-start_-_align-self:  flex-start;;

      --layout-self-center_-_-ms-align-self:  center; --layout-self-center_-_-webkit-align-self:  center; --layout-self-center_-_align-self:  center;;

      --layout-self-end_-_-ms-align-self:  flex-end; --layout-self-end_-_-webkit-align-self:  flex-end; --layout-self-end_-_align-self:  flex-end;;

      --layout-self-stretch_-_-ms-align-self:  stretch; --layout-self-stretch_-_-webkit-align-self:  stretch; --layout-self-stretch_-_align-self:  stretch;;

      --layout-self-baseline_-_-ms-align-self:  baseline; --layout-self-baseline_-_-webkit-align-self:  baseline; --layout-self-baseline_-_align-self:  baseline;;

      

      --layout-start-aligned_-_-ms-flex-line-pack:  start; --layout-start-aligned_-_-ms-align-content:  flex-start; --layout-start-aligned_-_-webkit-align-content:  flex-start; --layout-start-aligned_-_align-content:  flex-start;;

      --layout-end-aligned_-_-ms-flex-line-pack:  end; --layout-end-aligned_-_-ms-align-content:  flex-end; --layout-end-aligned_-_-webkit-align-content:  flex-end; --layout-end-aligned_-_align-content:  flex-end;;

      --layout-center-aligned_-_-ms-flex-line-pack:  center; --layout-center-aligned_-_-ms-align-content:  center; --layout-center-aligned_-_-webkit-align-content:  center; --layout-center-aligned_-_align-content:  center;;

      --layout-between-aligned_-_-ms-flex-line-pack:  justify; --layout-between-aligned_-_-ms-align-content:  space-between; --layout-between-aligned_-_-webkit-align-content:  space-between; --layout-between-aligned_-_align-content:  space-between;;

      --layout-around-aligned_-_-ms-flex-line-pack:  distribute; --layout-around-aligned_-_-ms-align-content:  space-around; --layout-around-aligned_-_-webkit-align-content:  space-around; --layout-around-aligned_-_align-content:  space-around;;

      

      --layout-block_-_display:  block;;

      --layout-invisible_-_visibility:  hidden !important;;

      --layout-relative_-_position:  relative;;

      --layout-fit_-_position:  absolute; --layout-fit_-_top:  0; --layout-fit_-_right:  0; --layout-fit_-_bottom:  0; --layout-fit_-_left:  0;;

      --layout-scroll_-_-webkit-overflow-scrolling:  touch; --layout-scroll_-_overflow:  auto;;

      --layout-fullbleed_-_margin:  0; --layout-fullbleed_-_height:  100vh;;

      

      --layout-fixed-top_-_position:  fixed; --layout-fixed-top_-_top:  0; --layout-fixed-top_-_left:  0; --layout-fixed-top_-_right:  0;;

      --layout-fixed-right_-_position:  fixed; --layout-fixed-right_-_top:  0; --layout-fixed-right_-_right:  0; --layout-fixed-right_-_bottom:  0;;

      --layout-fixed-bottom_-_position:  fixed; --layout-fixed-bottom_-_right:  0; --layout-fixed-bottom_-_bottom:  0; --layout-fixed-bottom_-_left:  0;;

      --layout-fixed-left_-_position:  fixed; --layout-fixed-left_-_top:  0; --layout-fixed-left_-_bottom:  0; --layout-fixed-left_-_left:  0;;
}

</style>
</custom-style><style>[hidden] { display: none !important; }</style><custom-style>
  <style is="custom-style">html {
  --google-red-100: #f4c7c3;
      --google-red-300: #e67c73;
      --google-red-500: #db4437;
      --google-red-700: #c53929;

      --google-blue-100: #c6dafc;
      --google-blue-300: #7baaf7;
      --google-blue-500: #4285f4;
      --google-blue-700: #3367d6;

      --google-green-100: #b7e1cd;
      --google-green-300: #57bb8a;
      --google-green-500: #0f9d58;
      --google-green-700: #0b8043;

      --google-yellow-100: #fce8b2;
      --google-yellow-300: #f7cb4d;
      --google-yellow-500: #f4b400;
      --google-yellow-700: #f09300;

      --google-grey-100: #f5f5f5;
      --google-grey-300: #e0e0e0;
      --google-grey-500: #9e9e9e;
      --google-grey-700: #616161;

      

      --paper-red-50: #ffebee;
      --paper-red-100: #ffcdd2;
      --paper-red-200: #ef9a9a;
      --paper-red-300: #e57373;
      --paper-red-400: #ef5350;
      --paper-red-500: #f44336;
      --paper-red-600: #e53935;
      --paper-red-700: #d32f2f;
      --paper-red-800: #c62828;
      --paper-red-900: #b71c1c;
      --paper-red-a100: #ff8a80;
      --paper-red-a200: #ff5252;
      --paper-red-a400: #ff1744;
      --paper-red-a700: #d50000;

      --paper-pink-50: #fce4ec;
      --paper-pink-100: #f8bbd0;
      --paper-pink-200: #f48fb1;
      --paper-pink-300: #f06292;
      --paper-pink-400: #ec407a;
      --paper-pink-500: #e91e63;
      --paper-pink-600: #d81b60;
      --paper-pink-700: #c2185b;
      --paper-pink-800: #ad1457;
      --paper-pink-900: #880e4f;
      --paper-pink-a100: #ff80ab;
      --paper-pink-a200: #ff4081;
      --paper-pink-a400: #f50057;
      --paper-pink-a700: #c51162;

      --paper-purple-50: #f3e5f5;
      --paper-purple-100: #e1bee7;
      --paper-purple-200: #ce93d8;
      --paper-purple-300: #ba68c8;
      --paper-purple-400: #ab47bc;
      --paper-purple-500: #9c27b0;
      --paper-purple-600: #8e24aa;
      --paper-purple-700: #7b1fa2;
      --paper-purple-800: #6a1b9a;
      --paper-purple-900: #4a148c;
      --paper-purple-a100: #ea80fc;
      --paper-purple-a200: #e040fb;
      --paper-purple-a400: #d500f9;
      --paper-purple-a700: #aa00ff;

      --paper-deep-purple-50: #ede7f6;
      --paper-deep-purple-100: #d1c4e9;
      --paper-deep-purple-200: #b39ddb;
      --paper-deep-purple-300: #9575cd;
      --paper-deep-purple-400: #7e57c2;
      --paper-deep-purple-500: #673ab7;
      --paper-deep-purple-600: #5e35b1;
      --paper-deep-purple-700: #512da8;
      --paper-deep-purple-800: #4527a0;
      --paper-deep-purple-900: #311b92;
      --paper-deep-purple-a100: #b388ff;
      --paper-deep-purple-a200: #7c4dff;
      --paper-deep-purple-a400: #651fff;
      --paper-deep-purple-a700: #6200ea;

      --paper-indigo-50: #e8eaf6;
      --paper-indigo-100: #c5cae9;
      --paper-indigo-200: #9fa8da;
      --paper-indigo-300: #7986cb;
      --paper-indigo-400: #5c6bc0;
      --paper-indigo-500: #3f51b5;
      --paper-indigo-600: #3949ab;
      --paper-indigo-700: #303f9f;
      --paper-indigo-800: #283593;
      --paper-indigo-900: #1a237e;
      --paper-indigo-a100: #8c9eff;
      --paper-indigo-a200: #536dfe;
      --paper-indigo-a400: #3d5afe;
      --paper-indigo-a700: #304ffe;

      --paper-blue-50: #e3f2fd;
      --paper-blue-100: #bbdefb;
      --paper-blue-200: #90caf9;
      --paper-blue-300: #64b5f6;
      --paper-blue-400: #42a5f5;
      --paper-blue-500: #2196f3;
      --paper-blue-600: #1e88e5;
      --paper-blue-700: #1976d2;
      --paper-blue-800: #1565c0;
      --paper-blue-900: #0d47a1;
      --paper-blue-a100: #82b1ff;
      --paper-blue-a200: #448aff;
      --paper-blue-a400: #2979ff;
      --paper-blue-a700: #2962ff;

      --paper-light-blue-50: #e1f5fe;
      --paper-light-blue-100: #b3e5fc;
      --paper-light-blue-200: #81d4fa;
      --paper-light-blue-300: #4fc3f7;
      --paper-light-blue-400: #29b6f6;
      --paper-light-blue-500: #03a9f4;
      --paper-light-blue-600: #039be5;
      --paper-light-blue-700: #0288d1;
      --paper-light-blue-800: #0277bd;
      --paper-light-blue-900: #01579b;
      --paper-light-blue-a100: #80d8ff;
      --paper-light-blue-a200: #40c4ff;
      --paper-light-blue-a400: #00b0ff;
      --paper-light-blue-a700: #0091ea;

      --paper-cyan-50: #e0f7fa;
      --paper-cyan-100: #b2ebf2;
      --paper-cyan-200: #80deea;
      --paper-cyan-300: #4dd0e1;
      --paper-cyan-400: #26c6da;
      --paper-cyan-500: #00bcd4;
      --paper-cyan-600: #00acc1;
      --paper-cyan-700: #0097a7;
      --paper-cyan-800: #00838f;
      --paper-cyan-900: #006064;
      --paper-cyan-a100: #84ffff;
      --paper-cyan-a200: #18ffff;
      --paper-cyan-a400: #00e5ff;
      --paper-cyan-a700: #00b8d4;

      --paper-teal-50: #e0f2f1;
      --paper-teal-100: #b2dfdb;
      --paper-teal-200: #80cbc4;
      --paper-teal-300: #4db6ac;
      --paper-teal-400: #26a69a;
      --paper-teal-500: #009688;
      --paper-teal-600: #00897b;
      --paper-teal-700: #00796b;
      --paper-teal-800: #00695c;
      --paper-teal-900: #004d40;
      --paper-teal-a100: #a7ffeb;
      --paper-teal-a200: #64ffda;
      --paper-teal-a400: #1de9b6;
      --paper-teal-a700: #00bfa5;

      --paper-green-50: #e8f5e9;
      --paper-green-100: #c8e6c9;
      --paper-green-200: #a5d6a7;
      --paper-green-300: #81c784;
      --paper-green-400: #66bb6a;
      --paper-green-500: #4caf50;
      --paper-green-600: #43a047;
      --paper-green-700: #388e3c;
      --paper-green-800: #2e7d32;
      --paper-green-900: #1b5e20;
      --paper-green-a100: #b9f6ca;
      --paper-green-a200: #69f0ae;
      --paper-green-a400: #00e676;
      --paper-green-a700: #00c853;

      --paper-light-green-50: #f1f8e9;
      --paper-light-green-100: #dcedc8;
      --paper-light-green-200: #c5e1a5;
      --paper-light-green-300: #aed581;
      --paper-light-green-400: #9ccc65;
      --paper-light-green-500: #8bc34a;
      --paper-light-green-600: #7cb342;
      --paper-light-green-700: #689f38;
      --paper-light-green-800: #558b2f;
      --paper-light-green-900: #33691e;
      --paper-light-green-a100: #ccff90;
      --paper-light-green-a200: #b2ff59;
      --paper-light-green-a400: #76ff03;
      --paper-light-green-a700: #64dd17;

      --paper-lime-50: #f9fbe7;
      --paper-lime-100: #f0f4c3;
      --paper-lime-200: #e6ee9c;
      --paper-lime-300: #dce775;
      --paper-lime-400: #d4e157;
      --paper-lime-500: #cddc39;
      --paper-lime-600: #c0ca33;
      --paper-lime-700: #afb42b;
      --paper-lime-800: #9e9d24;
      --paper-lime-900: #827717;
      --paper-lime-a100: #f4ff81;
      --paper-lime-a200: #eeff41;
      --paper-lime-a400: #c6ff00;
      --paper-lime-a700: #aeea00;

      --paper-yellow-50: #fffde7;
      --paper-yellow-100: #fff9c4;
      --paper-yellow-200: #fff59d;
      --paper-yellow-300: #fff176;
      --paper-yellow-400: #ffee58;
      --paper-yellow-500: #ffeb3b;
      --paper-yellow-600: #fdd835;
      --paper-yellow-700: #fbc02d;
      --paper-yellow-800: #f9a825;
      --paper-yellow-900: #f57f17;
      --paper-yellow-a100: #ffff8d;
      --paper-yellow-a200: #ffff00;
      --paper-yellow-a400: #ffea00;
      --paper-yellow-a700: #ffd600;

      --paper-amber-50: #fff8e1;
      --paper-amber-100: #ffecb3;
      --paper-amber-200: #ffe082;
      --paper-amber-300: #ffd54f;
      --paper-amber-400: #ffca28;
      --paper-amber-500: #ffc107;
      --paper-amber-600: #ffb300;
      --paper-amber-700: #ffa000;
      --paper-amber-800: #ff8f00;
      --paper-amber-900: #ff6f00;
      --paper-amber-a100: #ffe57f;
      --paper-amber-a200: #ffd740;
      --paper-amber-a400: #ffc400;
      --paper-amber-a700: #ffab00;

      --paper-orange-50: #fff3e0;
      --paper-orange-100: #ffe0b2;
      --paper-orange-200: #ffcc80;
      --paper-orange-300: #ffb74d;
      --paper-orange-400: #ffa726;
      --paper-orange-500: #ff9800;
      --paper-orange-600: #fb8c00;
      --paper-orange-700: #f57c00;
      --paper-orange-800: #ef6c00;
      --paper-orange-900: #e65100;
      --paper-orange-a100: #ffd180;
      --paper-orange-a200: #ffab40;
      --paper-orange-a400: #ff9100;
      --paper-orange-a700: #ff6500;

      --paper-deep-orange-50: #fbe9e7;
      --paper-deep-orange-100: #ffccbc;
      --paper-deep-orange-200: #ffab91;
      --paper-deep-orange-300: #ff8a65;
      --paper-deep-orange-400: #ff7043;
      --paper-deep-orange-500: #ff5722;
      --paper-deep-orange-600: #f4511e;
      --paper-deep-orange-700: #e64a19;
      --paper-deep-orange-800: #d84315;
      --paper-deep-orange-900: #bf360c;
      --paper-deep-orange-a100: #ff9e80;
      --paper-deep-orange-a200: #ff6e40;
      --paper-deep-orange-a400: #ff3d00;
      --paper-deep-orange-a700: #dd2c00;

      --paper-brown-50: #efebe9;
      --paper-brown-100: #d7ccc8;
      --paper-brown-200: #bcaaa4;
      --paper-brown-300: #a1887f;
      --paper-brown-400: #8d6e63;
      --paper-brown-500: #795548;
      --paper-brown-600: #6d4c41;
      --paper-brown-700: #5d4037;
      --paper-brown-800: #4e342e;
      --paper-brown-900: #3e2723;

      --paper-grey-50: #fafafa;
      --paper-grey-100: #f5f5f5;
      --paper-grey-200: #eeeeee;
      --paper-grey-300: #e0e0e0;
      --paper-grey-400: #bdbdbd;
      --paper-grey-500: #9e9e9e;
      --paper-grey-600: #757575;
      --paper-grey-700: #616161;
      --paper-grey-800: #424242;
      --paper-grey-900: #212121;

      --paper-blue-grey-50: #eceff1;
      --paper-blue-grey-100: #cfd8dc;
      --paper-blue-grey-200: #b0bec5;
      --paper-blue-grey-300: #90a4ae;
      --paper-blue-grey-400: #78909c;
      --paper-blue-grey-500: #607d8b;
      --paper-blue-grey-600: #546e7a;
      --paper-blue-grey-700: #455a64;
      --paper-blue-grey-800: #37474f;
      --paper-blue-grey-900: #263238;

      
      --dark-divider-opacity: 0.12;
      --dark-disabled-opacity: 0.38; 
      --dark-secondary-opacity: 0.54;
      --dark-primary-opacity: 0.87;

      
      --light-divider-opacity: 0.12;
      --light-disabled-opacity: 0.3; 
      --light-secondary-opacity: 0.7;
      --light-primary-opacity: 1.0;
}

</style>
</custom-style><custom-style>
  <style is="custom-style">html {
  --primary-text-color: var(--light-theme-text-color);
      --primary-background-color: var(--light-theme-background-color);
      --secondary-text-color: var(--light-theme-secondary-color);
      --disabled-text-color: var(--light-theme-disabled-color);
      --divider-color: var(--light-theme-divider-color);
      --error-color: var(--paper-deep-orange-a700);

      
      --primary-color: var(--paper-indigo-500);
      --light-primary-color: var(--paper-indigo-100);
      --dark-primary-color: var(--paper-indigo-700);

      --accent-color: var(--paper-pink-a200);
      --light-accent-color: var(--paper-pink-a100);
      --dark-accent-color: var(--paper-pink-a400);


      
      --light-theme-background-color: #ffffff;
      --light-theme-base-color: #000000;
      --light-theme-text-color: var(--paper-grey-900);
      --light-theme-secondary-color: #737373;  
      --light-theme-disabled-color: #9b9b9b;  
      --light-theme-divider-color: #dbdbdb;

      
      --dark-theme-background-color: var(--paper-grey-900);
      --dark-theme-base-color: #ffffff;
      --dark-theme-text-color: #ffffff;
      --dark-theme-secondary-color: #bcbcbc;  
      --dark-theme-disabled-color: #646464;  
      --dark-theme-divider-color: #3c3c3c;

      
      --text-primary-color: var(--dark-theme-text-color);
      --default-primary-color: var(--primary-color);
}

</style>
</custom-style><script async="" src="./Building Serverless Applications with an Event-Driven Architecture_files/lazy.min.js"></script><script src="./Building Serverless Applications with an Event-Driven Architecture_files/loader.js"></script>
<script src="./Building Serverless Applications with an Event-Driven Architecture_files/iframe_api"></script>
<script src="./Building Serverless Applications with an Event-Driven Architecture_files/vendor-45d462772c30000424907184f70c7157e95fb6227698d1671c5051818a6f60d8.js"></script>
<script src="./Building Serverless Applications with an Event-Driven Architecture_files/application-cd976ff3e60dd82e021a124c13a5f4fbfbf568d7453af855e2b275938d66d1b4.js"></script>
</head>
<body class="application-new focuses focuses-show l-full lab-show no-nav">
<div class="header-container light-theme">
<div class="header">
<ql-icon-button class="js-nav-toggle header__nav-panel-button l-mrm">menu</ql-icon-button>
<div class="header__title">
<a class="icon-button" href="javascript:history.back()"><ql-icon>arrow_back</ql-icon></a>

<h1 class="headline-5">
Building Serverless Applications with an Event-Driven Architecture
</h1>
</div>
<div class="header__actions">
<ql-icon-button class="header__button--search js-header-search-bar-button">search</ql-icon-button>
<a class="icon-button js-favorite-button favorite-button" id="CatalogItem-12762-favorite-button" data-type="CatalogItem" data-id="12762" data-name="Building Serverless Applications with an Event-Driven Architecture" href="https://www.qwiklabs.com/favorite.json?item_id=12762&amp;item_type=CatalogItem" tabindex="0"><ql-icon>favorite_border</ql-icon>
</a><div class="mdl-tooltip js-tooltip" for="CatalogItem-12762-favorite-button" data-upgraded=",MaterialTooltip">
Add to favorites
</div>


<ql-icon-button id="control-panel-target" style="display: none;">
dashboard
</ql-icon-button>
<ql-menu for="control-panel-target" id="control-panel-menu" style="left: -1000px; top: -1000px; opacity: 0; visibility: hidden;" role="menu" aria-labelledby="control-panel-target"></ql-menu>

<ql-icon-button id="help-menu-button" tabindex="0">help</ql-icon-button>
<div class="mdl-tooltip js-tooltip" data-mdl-for="help-menu-button" data-upgraded=",MaterialTooltip">
Help
</div>
<ql-menu for="help-menu-button" id="help-menu" style="left: -1000px; top: -1000px; opacity: 0; visibility: hidden;" role="menu" aria-labelledby="help-menu-button">
<ql-menu-item>
<ql-help context="lab" data-analytics-action="opened_help" data-analytics-label="lab" productdata="{&quot;userId&quot;:4265112}">
Help Center
</ql-help>
</ql-menu-item>
<ql-menu-item>
<a target="_blank" class="ql-body-1" href="https://support.google.com/qwiklabs/contact/contact_us" tabindex="-1" role="menuitem">Email support</a>
</ql-menu-item>
<ql-menu-item>
<a class="ql-body-1" onclick="ql.chat.open()" tabindex="-1" role="menuitem">Chat support</a>
</ql-menu-item>
</ql-menu>

<button class="icon-button" id="my_account" aria-haspopup="true" aria-controls="">
<ql-avatar></ql-avatar>
</button>
<ql-menu for="my_account" open="" style="left: -1000px; top: -1000px; opacity: 0; visibility: hidden;" role="menu" aria-labelledby="my_account">
<div class="my-account-menu">
<ql-avatar class="l-mtl l-mbl" size="120"></ql-avatar>
<div class="my-account-menu__user-info l-mbl">
<h4 class="ql-subhead-1">Ankit Manglik</h4>
<p class="ql-body-2 text--light">amanglik2010@gmail.com</p>
<p class="ql-body-2 text--light">
</p>
<a class="text--green ql-subhead-2" href="https://www.qwiklabs.com/my_account/payments"><ql-chip positive="">
Monthly Subscription
</ql-chip>
</a></div>
<div class="buttons l-mbl">
<a class="button button--hairline" id="settings" href="https://www.qwiklabs.com/my_account/profile">Settings</a>
</div>
<hr>
<ql-button data-analytics-action="clicked_sign_out" href="/users/sign_out" method="delete">
Sign Out
</ql-button>
<div class="privacy l-mtl">
<a class="ql-caption text--light" href="https://www.qwiklabs.com/privacy_policy">Privacy</a>
<span class="ql-caption text--light l-mls l-mrs">·</span>
<a class="ql-caption text--light" href="https://www.qwiklabs.com/terms_of_service">Terms</a>
</div>
</div>
</ql-menu>

</div>
</div>
<div class="header__search-bar js-header-search-bar">
<form class="js-search-form-mobile" onsubmit="ql.searchFilter(); return false;" action="https://www.qwiklabs.com/searches/elasticsearch" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="✓"><input type="hidden" name="authenticity_token" value="j1gUfQ73ILTlnhxTojVfl5bfkgEoAZyRvJPdgpt4J2aQ9bMclfRbvejFgNS1CNzc6Uo78+f84Xsjo91dTauDmQ==">
<input type="text" name="keywords" id="keywords" placeholder="Search" maxlength="255" aria-label="catalog search bar">
</form>

<ql-icon-button class="js-close-search-bar">close</ql-icon-button>
</div>
</div>

<nav class="nav-bar">
<a class="nav-bar__item js-navigation-button" href="https://www.qwiklabs.com/"><ql-icon class="nav-bar__item__icon">
home
</ql-icon>
<span class="nav-bar__item__label">
Home
</span>
</a>
<a class="nav-bar__item js-navigation-button  active" aria-current="page" href="https://www.qwiklabs.com/catalog"><ql-icon class="nav-bar__item__icon">
school
</ql-icon>
<span class="nav-bar__item__label">
Catalog
</span>
</a>
<a class="nav-bar__item js-navigation-button" href="https://www.qwiklabs.com/my_learning"><ql-icon class="nav-bar__item__icon">
event_note
</ql-icon>
<span class="nav-bar__item__label">
My Learning
</span>
</a>
</nav>

<nav class="nav-panel js-nav-panel">
<div class="nav-panel__logo">
<div class="logo logo--blue"></div>
</div>
<a title="Home" tabindex="-1" class="nav-panel__item js-navigation-button" href="https://www.qwiklabs.com/"><ql-icon class="nav-panel__item__icon">
home
</ql-icon>
<div class="nav-panel__item__label">
Home
</div>
</a>
<a title="Catalog" tabindex="-1" class="nav-panel__item js-navigation-button active" aria-current="page" href="https://www.qwiklabs.com/catalog"><ql-icon class="nav-panel__item__icon">
school
</ql-icon>
<div class="nav-panel__item__label">
Catalog
</div>
</a>
<a title="My Learning" tabindex="-1" class="nav-panel__item js-navigation-button" href="https://www.qwiklabs.com/my_learning"><ql-icon class="nav-panel__item__icon">
event_note
</ql-icon>
<div class="nav-panel__item__label">
My Learning
</div>
</a>
<div class="nav-panel__spacer"></div>
<a title="Profile" tabindex="-1" class="nav-panel__item js-navigation-button" href="https://www.qwiklabs.com/my_account/profile"><ql-icon class="nav-panel__item__icon">
account_circle
</ql-icon>
<div class="nav-panel__item__label">
Profile
</div>
</a>
<a title="Credits &amp; Subscriptions" tabindex="-1" class="nav-panel__item js-navigation-button" href="https://www.qwiklabs.com/my_account/credits"><ql-icon class="nav-panel__item__icon">
money
</ql-icon>
<div class="nav-panel__item__label">
Credits &amp; Subscriptions
</div>
</a>
<a title="Security" tabindex="-1" class="nav-panel__item js-navigation-button" href="https://www.qwiklabs.com/my_account/security"><ql-icon class="nav-panel__item__icon">
security
</ql-icon>
<div class="nav-panel__item__label">
Security
</div>
</a>
<div class="nav-panel__spacer"></div>
<a class="nav-panel__item" tabindex="-1" href="https://www.qwiklabs.com/focuses/12762?parent=catalog#"><ql-help>
<div class="nav-panel__help-item">
<ql-icon class="nav-panel__item__icon">help</ql-icon>
<div class="nav-panel__item__label">
Help
</div>
</div>
</ql-help>
</a><div class="nav-panel__small-links">
<a tabindex="-1" href="https://www.qwiklabs.com/privacy_policy">Privacy</a>
<a tabindex="-1" href="https://www.qwiklabs.com/terms_of_service">Terms</a>
</div>
</nav>
<div class="nav-panel__overlay js-nav-toggle"></div>

<main class="js-main">
<span class="hidden" id="flash-sibling-before"></span>

<div class="l-main-wrapper" id="main-wrapper">







<ql-drawer-container class="js-lab-state" data-analytics-payload="{&quot;label&quot;:&quot;Building Serverless Applications with an Event-Driven Architecture&quot;,&quot;lab_name&quot;:&quot;Building Serverless Applications with an Event-Driven Architecture&quot;,&quot;classroom_name&quot;:null,&quot;deployment&quot;:&quot;run&quot;}" data-focus-id="12762" data-lab-billing-limit="0.0" data-lab-duration="5400" data-parent="catalog" data-payment-required="" data-recaptcha-enabled="" id="lab-container">
<ql-drawer id="terminal-drawer" slot="drawer">
<iframe class="terminal" id="embedded-resource" src="./Building Serverless Applications with an Event-Driven Architecture_files/saved_resource.html"></iframe>
</ql-drawer>
<ql-drawer-content class="js-lab-wrapper" id="lab-content" slot="drawer-content">
<ql-drawer-container id="lab-content-container">
<ql-drawer id="control-panel-drawer" open="" slot="drawer" width="320" style="width: 320px;">

<ql-lab-control-panel class="ql-lab-control-panel__max-height control-panel js-lab-control-panel" connectionfiles="[]" labcontrolbutton="{&quot;disabled&quot;:false,&quot;pending&quot;:false,&quot;running&quot;:false}" labdetails="[]" labtimer="{&quot;ticking&quot;:false,&quot;secondsRemaining&quot;:5400}" studentresources="[]">
<script src="./Building Serverless Applications with an Event-Driven Architecture_files/api.js"></script>
        <script>
          // Define function so that we can call it again later if we need to reset it
          // This executes reCAPTCHA and then calls our callback.
          function executeRecaptchaForStartLab() {
            grecaptcha.ready(function() {
              grecaptcha.execute('6LeVI8IUAAAAAJNdox5eTkYrw9SbvhZ1TFyv3iHr', {action: 'start_lab'}).then(function(token) {
                setInputWithRecaptchaResponseTokenForStartLab('g-recaptcha-response-data-start-lab', token)
              });
            });
          };
          // Invoke immediately
          executeRecaptchaForStartLab()

          // Async variant so you can await this function from another async function (no need for
          // an explicit callback function then!)
          // Returns a Promise that resolves with the response token.
          async function executeRecaptchaForStartLabAsync() {
            return new Promise((resolve, reject) => {
              grecaptcha.ready(async function() {
                resolve(await grecaptcha.execute('6LeVI8IUAAAAAJNdox5eTkYrw9SbvhZ1TFyv3iHr', {action: 'start_lab'}))
              });
            })
          };

                    var setInputWithRecaptchaResponseTokenForStartLab = function(id, token) {
            var element = document.getElementById(id);
            element.value = token;
          }

        </script>
<input type="hidden" name="g-recaptcha-response-data[start_lab]" id="g-recaptcha-response-data-start-lab" data-sitekey="6LeVI8IUAAAAAJNdox5eTkYrw9SbvhZ1TFyv3iHr" class="g-recaptcha g-recaptcha-response " value="03AGdBq263_tPPyFBQp6CjzXA0QyOWx8eBQVo4Q4GJcRvoaUA49UmmKcYbDAaKQC8XsJrUC-NLHcMbDCPBxhG9e40VZ57Jzh_3YLe4nYD1uFgKKW1kqym2pKfhqFjn0ZOdeI4hJkEtcjoXPIxsyombnHfOS95ss15pX6Y-8GZhFdPB43kOHlKgWYqq6BWVQ8XZHwj0DA77GmVzGdJfVox-duEbXiBAoqsQDb_2rhvhAEsHyDVtq5Exank_zcB3Q-jiS-xnz0YMbanmfnqSZucTAWFNTLQF7jJNnUfGcj3qBv6n1VmqGhlV7bwMpzxPN2zNCl8HuAUGTQClSgEw_wIFfc_7OtPyN33FZofyZDZNX-VwyHZq5AIdAfAxz5MXdoF-rAN40AotFCxjVLEI3NgFe07yxPLK4msziPxoV3AD_3MYMO1XLYGiH3kVLWylAIuzHN1R7XE0kfBpqSt9AiSejjovnQ663x11nKCjlGt8gQmBWBGfkhz2T3zhqwtGU1jVInlb8K7L-wYt" style=""><div style="width: 304px; height: 78px;"><div><iframe src="./Building Serverless Applications with an Event-Driven Architecture_files/anchor.html" width="304" height="78" role="presentation" name="a-vy2s6nfz4v87" frameborder="0" scrolling="no" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox"></iframe></div><textarea id="g-recaptcha-response" name="g-recaptcha-response" class="g-recaptcha-response" style="width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;"></textarea></div></input>

<div class="hidden" id="recaptcha-v2-start-lab" slot="recaptcha">
<script src="./Building Serverless Applications with an Event-Driven Architecture_files/api(1).js" async="" defer=""></script>
<div data-sitekey="6LeOI8IUAAAAAPkHlMAE9NReCD_1WD81iYlBlCnV" data-callback="recaptchaComplete" data-expired-callback="expireV2Token" class="g-recaptcha "><div style="width: 304px; height: 78px;"><div><iframe src="./Building Serverless Applications with an Event-Driven Architecture_files/anchor(1).html" width="304" height="78" role="presentation" name="a-z134547j0mx1" frameborder="0" scrolling="no" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox"></iframe></div><textarea id="g-recaptcha-response-1" name="g-recaptcha-response" class="g-recaptcha-response" style="width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;"></textarea></div><iframe style="display: none;" src="./Building Serverless Applications with an Event-Driven Architecture_files/saved_resource(1).html"></iframe></div>
          <noscript>
            <div>
              <div style="width: 302px; height: 422px; position: relative;">
                <div style="width: 302px; height: 422px; position: absolute;">
                  <iframe
                    src="https://www.recaptcha.net/recaptcha/api/fallback?k=6LeOI8IUAAAAAPkHlMAE9NReCD_1WD81iYlBlCnV"
                    name="ReCAPTCHA"
                    style="width: 302px; height: 422px; border-style: none; border: 0; overflow: hidden;">
                  </iframe>
                </div>
              </div>
              <div style="width: 300px; height: 60px; border-style: none;
                bottom: 12px; left: 25px; margin: 0px; padding: 0px; right: 25px;
                background: #f9f9f9; border: 1px solid #c1c1c1; border-radius: 3px;">
                <textarea id="g-recaptcha-response" name="g-recaptcha-response"
                  class="g-recaptcha-response"
                  style="width: 250px; height: 40px; border: 1px solid #c1c1c1;
                  margin: 10px 25px; padding: 0px; resize: none;">
                </textarea>
              </div>
            </div>
          </noscript>

</div>
</ql-lab-control-panel></ql-drawer>
<ql-drawer-content id="lab-instructions" slot="drawer-content">
<div class="alert alert--fake js-alert alert-success" style="display: flex;">
<p class="alert__message js-alert-message">Thanks for reviewing this lab.</p>
<a class="alert__close js-alert-close">
<i class="fa fa-times"></i>
</a>
<iframe class="l-ie-iframe-fix" src="./Building Serverless Applications with an Event-Driven Architecture_files/saved_resource(2).html"></iframe>
</div>
<div class="js-lab-content lab-content__renderable-instructions">
<div class="lab-preamble">
<h1 class="lab-preamble__title">
Building Serverless Applications with an Event-Driven Architecture
</h1>
<div class="lab-preamble__details subtitle-headline-1">
<span>1 hour 30 minutes</span>
<span>10 Credits</span>
<div class="lab__rating">
<a href="https://www.qwiklabs.com/focuses/12762/reviews?parent=catalog"><div class="rateit" data-rateit-readonly="true" data-rateit-value="3.6289"><div class="rateit-reset" style="display: none;"></div><div class="rateit-range" style="width: 80px; height: 16px;"><div class="rateit-selected" style="height: 16px; width: 58.0624px;"></div><div class="rateit-hover" style="height:16px"></div></div></div>

</a></div>
</div>
</div>

<div class="js-markdown-instructions markdown-lab-instructions no-select" id="markdown-lab-instructions">
<p><img src="./Building Serverless Applications with an Event-Driven Architecture_files/aws-logo.png" alt=""></p>



<h2 id="step1">Self-Paced Lab 254</h2>

<h3>Version 1.0.2</h3>

<p>© 2020 Amazon Web Services, Inc. and its affiliates. All rights reserved. This work may not be reproduced or redistributed, in whole or in part, without prior written permission from Amazon Web Services, Inc. Commercial copying, lending, or selling is prohibited.</p>

<p>Errors, corrections or other questions? Contact us at <a href="https://support.aws.amazon.com/#/contacts/aws-training" target="_blank"><em>AWS Training and Certification</em></a>.</p>

<h2 id="step2">Lab overview</h2>

<h3>Overview</h3>

<p>Serverless is the native architecture of the cloud. You can build serverless architectures for nearly any type of application or backend service—without thinking about servers. This type of architecture eliminates infrastructure management tasks such as server or cluster provisioning, patching, operating system maintenance, and capacity provisioning. Everything required to run and scale your application with high availability is handled for you.</p>

<p>Serverless enables you to shift more of your operational responsibilities to Amazon Web Services (AWS), increasing your agility and innovation and lowering your total cost of ownership. Your developers can focus on their core product instead of worrying about managing and operating servers or runtimes, either in the cloud or on premises. This reduced overhead lets developers reclaim time and energy that can be spent on developing great products that scale and are reliable.</p>

<p>In this lab, you build a web-based book printing app using a set of serverless technologies including Amazon API Gateway, AWS Step Functions, AWS Lambda, Amazon Simple Storage Service (Amazon S3), Amazon DynamoDB, Amazon Simple Notification Service (Amazon SNS), Amazon Simple Queue Service (Amazon SQS), and Amazon Rekognition.</p>

<h3>Objectives</h3>

<p>After completing this lab, you will be able to:</p>
<ul>
<li>Understand an event-driven architecture</li>
<li>Understand how Step Functions is configured to orchestrate serverless applications</li>
<li>Take advantage of Amazon SQS and Amazon SNS</li>
<li>Create and configure Lambda functions and API Gateway resources</li>
<li>Made configuration updates to restore API functionality</li>
</ul>
<h3>Prerequisites</h3>

<p>This lab requires:</p>
<ul>
<li>Access to a notebook computer with Wi-Fi and Microsoft Windows, macOS, or Linux (Ubuntu, SuSE, or Red Hat)</li>
<li>For Microsoft Windows users: Administrator access to the computer</li>
<li>An internet browser such as Chrome, Firefox, or Internet Explorer 9 (previous versions of Internet Explorer are not supported)</li>
</ul>
<h3>Duration</h3>

<p>This lab requires 90 minutes to complete.</p>

<h3>Scenario</h3>

<p>This lab is built around a photo book printing application. The application allows customers to upload a collection of images that they want printed in a physical book. Each image is processed to ensure that it is displayed properly in the book. The application uses Step Functions to manage the workflow. The workflow uses Lambda functions to make sure that each image is the proper file type and uses Amazon Rekognition to ensure that the content is appropriate. The workflow also resizes and watermarks the images and then generates a PDF proof for the customer to approve. Next, Amazon SNS sends an email to the customer for approval before sending the job to Amazon SQS. Amazon SQS sends off the book to the third-party printing service to be printed and shipped to the customer.</p>

<h3>Lab environment</h3>

<p>The environment uses API Gateway, Lambda functions, Step Functions, Amazon S3 buckets, DynamoDB tables, Amazon SQS queues, Amazon SNS topics and Amazon Rekognition.</p>

<p>API Gateway is hosting several APIs in front of several Lambda functions. DynamoDB is used to store metadata about the images a user uploads. A Step Functions workflow is started to validate the images and render them for printing, before sending a link (via Amazon SNS) to the user for their verification. A user is able to preview a PDF of the book before sending it out to a third party for printing and shipping.</p>

<h2 id="step3">Access the AWS Management Console</h2>

<h2 id="step4">Start Lab</h2>
<ol start="1">
<li>At the top of your screen, launch your lab by clicking <span style="background-color:#34A853;font-family:Google Sans;font-weight:bold;font-size:90%;color:white;border-color:#34A853;border-radius:4px;border-width:2px;border-style:solid;padding-top:5px;padding-bottom:5px;padding-left:10px;padding-right:10px;">Start Lab</span>
</li>
</ol>
<p>This will start the process of provisioning your lab resources. An estimated amount of time to provision your lab resources will be displayed. You must wait for your resources to be provisioned before continuing.</p>

<p><i class="fas fa-info-circle"></i> If you are prompted for a token, use the one distributed to you (or credits you have purchased). </p>
<ol start="2">
<li>Open your lab by clicking <span style="background-color:white;font-family:Google Sans;font-weight:bold;font-size:90%;color:#1a73e8;border-color:#dadce0;border-radius:4px;border-width:2px;border-style:solid;padding-top:5px;padding-bottom:5px;padding-left:10px;padding-right:10px;">Open Console</span>
</li>
</ol>
<p>This will automatically log you into the AWS Management Console. </p>

<p><i class="fas fa-exclamation-triangle"></i> <strong>Please do not change the Region unless instructed</strong>.</p>



<h3>Common login errors</h3>

<p><strong>Error : Federated login credentials</strong></p>

<p><img src="./Building Serverless Applications with an Event-Driven Architecture_files/federatedloginerror.png" alt=""></p>

<p>If you see this message:</p>
<ul>
<li>Close the browser tab to return to your initial lab window</li>
<li>Wait a few seconds</li>
<li>Click <span style="background-color:white;font-family:Google Sans;font-weight:bold;font-size:90%;color:#1a73e8;border-color:#dadce0;border-radius:4px;border-width:2px;border-style:solid;padding-top:5px;padding-bottom:5px;padding-left:10px;padding-right:10px;">Open Console</span> again</li>
</ul>
<p>You should now be able to access the AWS Management Console.</p>



<p><strong>Error: You must first log out</strong></p>

<p><img src="./Building Serverless Applications with an Event-Driven Architecture_files/logouterror.png" alt=""></p>

<p>If you see the message, <strong>You must first log out before logging into a different AWS account:</strong> </p>
<ul>
<li>Click <strong>click here</strong>
</li>
<li>Close your browser tab to return to your initial Qwiklabs window</li>
<li>Click <span style="background-color:white;font-family:Google Sans;font-weight:bold;font-size:90%;color:#1a73e8;border-color:#dadce0;border-radius:4px;border-width:2px;border-style:solid;padding-top:5px;padding-bottom:5px;padding-left:10px;padding-right:10px;">Open Console</span> again</li>
</ul>

<ol start="3">
<li>At the top-right corner of the console, make sure that the AWS Region matches the <strong>Region</strong> value from the left side of the lab page.</li>
</ol>
<p><i class="fas fa-chalkboard-teacher" style="color:black;"></i> <strong>Note</strong> <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions" target="_blank">Click here</a> to find the Region name for each Region code.</p>

<p><i class="fas fa-exclamation-triangle" style="color:orange;"></i> Do not change the Region during this lab unless instructed.</p>



<h2 id="step5">Task 1: Understanding the architecture and underlying services</h2>

<p>In this task, you look at the different AWS services that are used in this application. Take a few minutes to navigate the console for each service.</p>

<p>The following image is a high-level architecture diagram of the environment:</p>

<p><img src="./Building Serverless Applications with an Event-Driven Architecture_files/architecture-diagram.png" alt="Architecture diagram"></p>

<h3>Key services used in this app</h3>
<ul>
<li><p><strong>Amazon API Gateway</strong> is a fully managed service that makes it easy for developers to create, publish, maintain, monitor, and secure APIs at any scale. APIs act as the "front door" for applications to access data, business logic, or functionality from your backend services.</p></li>
<li><p><strong>AWS Lambda</strong> lets you run code without provisioning or managing servers. You pay only for the compute time you consume. With Lambda, you can run code for virtually any type of application or backend service—all with zero administration. Just upload your code, and Lambda takes care of everything required to run and scale your code with high availability. You can set up your code to automatically trigger from other AWS services or call it directly from any web or mobile app.</p></li>
<li><p><strong>AWS Step Functions</strong> lets you coordinate multiple AWS services into serverless workflows so you can build and update apps quickly. Using Step Functions, you can design and run workflows that stitch together services, such as AWS Lambda, AWS Fargate, and Amazon SageMaker, into feature-rich applications.</p></li>
<li><p><strong>Amazon Simple Storage Service (Amazon S3)</strong> is an object storage service that offers industry-leading scalability, data availability, security, and performance. This means customers of all sizes and industries can use it to store and protect any amount of data for a range of use cases, such as websites, mobile applications, backup and restore, archive, enterprise applications, Internet of Things (IoT) devices, and big data analytics. Amazon S3 provides easy-to-use management features so you can organize your data and configure finely tuned access controls to meet your specific business, organizational, and compliance requirements. Amazon S3 is designed for 99.999999999% (11 9s) of durability and stores data for millions of applications for companies all around the world.</p></li>
<li><p><strong>Amazon Simple Queue Service (Amazon SQS)</strong> is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications. Amazon SQS eliminates the complexity and overhead associated with managing and operating message-oriented middleware and empowers developers to focus on differentiating work. Using Amazon SQS, you can send, store, and receive messages between software components at any volume, without losing messages or requiring other services to be available.</p></li>
<li><p><strong>Amazon Simple Notification Service (Amazon NS)</strong> is a highly available, durable, secure, fully managed pub/sub messaging service that enables you to decouple microservices, distributed systems, and serverless applications. Amazon SNS provides topics for high-throughput, push-based, many-to-many messaging.</p></li>
<li><p><strong>Amazon Rekognition</strong> makes it easy to add image and video analysis to your applications using proven, highly scalable, deep learning technology that requires no machine learning expertise to use. With Amazon Rekognition, you can identify objects, people, text, scenes, and activities in images and videos, as well as detect any inappropriate content.</p></li>
</ul>
<h3>APIs used in this lab</h3>

<p><strong>1: /presigned</strong> – The user sends a request for presigned URLs to upload their images to an Amazon S3 bucket.</p>

<p><strong>2:</strong> – The user uses the presigned URLs from <strong>1: /presigned</strong> step to upload their images directly to Amazon S3.</p>

<p><strong>3: /CreateBookBinding</strong> – The user triggers the book creation process by indicating they have completed uploading images. This triggers the image-processing state machine.</p>

<p><strong>4: /execution</strong> – The user approves the PDF by acknowledging an email from Amazon SNS.</p>

<h3>Step Functions and state machines in this lab</h3>
<ul>
<li><p><strong>ImageProcessStateMachine:</strong> The job of this state machine is to pick up the user-uploaded images from the Amazon S3 <strong>/Incoming</strong> folder, process the images, and create a PDF album for book printing. In this flow, a few key steps are image validation, resizing, and watermarking.</p></li>
<li><p><strong>BookprintStateMachine:</strong> This state machine reads the messages from the print vendor Amazon SQS queue and sends the photo book to a third-party vendor for printing.</p></li>
</ul>


<h2 id="step6">Task 2: Setting up a Lambda function to generate presigned URLs</h2>

<p>In this task, you create a Lambda function that generates presigned URLs, then captures user-provided album metadata and stores it to DynamoDB.</p>

<p><strong>Note</strong> This application requires several Lambda functions. Most of these were created for you during the lab provisioning process.</p>
<ol start="4">
<li><p>In the AWS Management Console, ensure that the Region is set to <strong>Oregon</strong> (us-west-2) in the upper-right corner.</p></li>
<li><p>Click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>Lambda</strong>.</p></li>
<li><p>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;">Create function</span></p></li>
<li><p>Configure the following:</p></li>
</ol><ul>
<li>Select <strong>Author from scratch</strong>
</li>
<li>
<strong>Function name:</strong> Enter <input readonly="" class="copyable-inline-input" size="20" type="text" value="PresignedUrlFunction">
</li>
<li>
<strong>Runtime:</strong> Select  <strong>Python 3.8</strong>
</li>
</ul><ol start="8">
<li>Click to expand <strong>Choose or create an execution role</strong>, and configure the following:</li>
</ol><ul>
<li>
<strong>Execution role:</strong> Select <strong>Use an existing role</strong>
</li>
<li>
<strong>Existing role:</strong> Select the role that contains <strong>xxxx-BackendProcessingLambda-xxxx</strong>
</li>
</ul><ol start="9">
<li><p>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;">Create function</span></p></li>
<li><p>In the <strong>Function code</strong> section, click <span style="background-color:white;font-weight:bold;font-size:90%;color:#545b64;border-color:#545b64;border-radius:2px;border-width:1px;border-style:solid;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Actions</span> &gt; <strong>Upload a file from Amazon S3</strong></p></li>
<li><p>On the <strong>Upload a file from Amazon S3</strong> window, configure:</p></li>
</ol><ul>
<li>
<strong>Amazon S3 link URL:</strong> Copy and paste the <strong>PresignedLambdaSourceCode</strong> URL from the left side of the lab page</li>
<li>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;">Save</span>
</li>
</ul><ol start="12">
<li><p>In the <strong>Environment variables</strong> section, click  <span style="background-color:white;font-weight:bold;font-size:90%;color:#545b64;border-color:#545b64;border-radius:2px;border-width:1px;border-style:solid;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Edit</span></p></li>
<li><p>Click <span style="background-color:white;font-weight:bold;font-size:90%;color:#545b64;border-color:#545b64;border-radius:2px;border-width:1px;border-style:solid;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Add environment variable</span> for each of the following variable.</p></li>
</ol><ul>
<li>
<strong>Key:</strong> <input readonly="" class="copyable-inline-input" size="22" type="text" value="imageMetadataTableName">
</li>
<li>
<strong>Value:</strong> Copy and paste the <strong>ImageMetadataTable</strong> value from the left side of the lab page</li>
<li>
<strong>Key:</strong> <input readonly="" class="copyable-inline-input" size="12" type="text" value="s3BucketName">
</li>
<li>
<strong>Value:</strong> Copy and paste the <strong>UserImagesS3Bucket</strong> value from the left side of the lab page</li>
</ul><ol start="14">
<li><p>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;">Save</span></p></li>
<li><p>In the <strong>Basic settings</strong> section, click  <span style="background-color:white;font-weight:bold;font-size:90%;color:#545b64;border-color:#545b64;border-radius:2px;border-width:1px;border-style:solid;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Edit</span> and set the following options.</p></li>
</ol><ul>
<li>
<strong>Memory (MB):</strong> Select <strong>128 MB</strong>
</li>
<li>
<strong>Timeout:</strong> Enter <strong>30 sec</strong>
</li>
<li>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;">Save</span>
</li>
</ul>
<p>You have successfully set up the Lambda function to generate presigned URLs and create the album metadata.</p>



<h2 id="step7">Task 3: Creating a presigned API resource</h2>

<p>All Amazon S3 objects and buckets are private by default. Presigned URLs are useful if you want a user to be able to upload a specific object to your bucket, but you don't want to require them to have AWS security credentials or permissions. When you create a presigned URL, you must provide your security credentials and then specify a bucket name, object key, HTTP method (PUT for uploading objects), and expiration date and time. Presigned URLs are valid only for the specified duration.</p>

<p>In this task, you create a new API resource on an existing API Gateway. This API endpoint generates presigned URLs to upload the images directly to the Amazon S3 bucket for further processing.</p>

<p><strong>Note</strong> The API Gateway endpoint and other API resources were created during the lab provisioning process.</p>
<ol start="16">
<li><p>In the AWS Management Console, ensure that the Region is set to <strong>Oregon</strong> (us-west-2) in the upper-right corner.</p></li>
<li><p>Click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>API Gateway</strong>.</p></li>
<li><p>Click the name of the API that contains <strong>DigitalBookPrintsAPI-xxxx</strong>.</p></li>
<li><p>From the <span style="background-color:#DEDEDE;font-weight:bold;font-size:90%;color:#444;border-radius:5px;border-width:1px;border-style:solid;border-color:#444;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;background-color:WhiteSmoke;">Actions <i class="fas fa-angle-down"> </i></span> menu, choose <strong>Create Resource</strong>.</p></li>
<li><p>On the <strong>New Child Resource</strong> screen, configure the following:</p></li>
</ol><ul>
<li>
<strong>Resource Name*:</strong> Enter <input readonly="" class="copyable-inline-input" size="9" type="text" value="presigned">
</li>
<li>
<strong>Resource Path*:</strong> Keep <input readonly="" class="copyable-inline-input" size="10" type="text" value="/presigned"> (it is auto populated)</li>
</ul><ol start="21">
<li><p>Click <span style="background-color:#257ACF;font-weight:bold;font-size:90%;color:white;border-radius:5px;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;">Create Resource</span></p></li>
<li><p>Select the <strong>/presigned</strong> resource.</p></li>
<li><p>From the <span style="background-color:#DEDEDE;font-weight:bold;font-size:90%;color:#444;border-radius:5px;border-width:1px;border-style:solid;border-color:#444;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;background-color:WhiteSmoke;">Actions <i class="fas fa-angle-down"> </i></span> menu, choose <strong>Create Method</strong>.</p></li>
<li><p>From the drop-down menu, select <strong>POST</strong>, and click <i class="fas fa-check-circle"></i></p></li>
<li><p>On the <strong>/presigned - POST - Setup</strong> screen, configure the following:</p></li>
</ol><ul>
<li>
<strong>Integration type:</strong> Choose <strong>Lambda Function</strong>
</li>
<li>
<strong>Use Lambda Proxy integration:</strong> Select <i class="fas fa-check-square"></i>
</li>
<li>
<strong>Lambda Region:</strong> Select <strong>us-west-2</strong>
</li>
<li>
<strong>Lambda Function:</strong> Enter <input readonly="" class="copyable-inline-input" size="20" type="text" value="PresignedUrlFunction">
</li>
</ul><ol start="26">
<li><p>Click <span style="background-color:#257ACF;font-weight:bold;font-size:90%;color:white;border-radius:5px;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;">Save</span></p></li>
<li><p>Click <span style="background-color:#257ACF;font-weight:bold;font-size:90%;color:white;border-radius:5px;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;">OK</span></p></li>
<li><p>From the <span style="background-color:#DEDEDE;font-weight:bold;font-size:90%;color:#444;border-radius:5px;border-width:1px;border-style:solid;border-color:#444;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;background-color:WhiteSmoke;">Actions <i class="fas fa-angle-down"> </i></span> menu, choose <strong>Deploy API</strong>.</p></li>
<li><p>For <strong>Deployment stage</strong>, select <strong>stage</strong>.</p></li>
<li><p>Click <span style="background-color:#257ACF;font-weight:bold;font-size:90%;color:white;border-radius:5px;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;">Deploy</span></p></li>
<li><p>In the <strong>Stages</strong> panel on the left, expand <strong>stage</strong>, and click <strong>POST</strong> under <strong>/presigned</strong>.</p></li>
<li><p>Copy the <strong>Invoke URL</strong> to a text editor to use in a later task.</p></li>
</ol>
<p>Your presigned API and Lambda functions are ready for you to upload a few images.</p>



<h2 id="step8">Task 4: Uploading sample images</h2>

<p>In this task, you upload a few sample pictures to be part of the photo book..</p>
<ol start="33">
<li><p>In the <strong>AWS Management Console</strong>, click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>Cloud9</strong>.</p></li>
<li><p>For the <strong>DigitalBooks-xxxx</strong> environment, click <span style="background-color:#DEDEDE;font-weight:bold;font-size:90%;color:#444;border-radius:1px;border-width:1px;border-style:solid;border-color:#444;padding-top:2px;padding-bottom:2px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;background-color:WhiteSmoke;">Open IDE</span></p></li>
</ol>
<p>Within a few seconds, the AWS Cloud9 environment launches. Notice the Linux-style terminal window in the bottom pane.</p>
<ol start="35">
<li>Go to the AWS Cloud9 terminal to download sample images, run the following commands:</li>
</ol><pre class="highlight plaintext"><code>cd ~/environment
wget https://us-west-2-aws-training.s3-us-west-2.amazonaws.com/awsu-spl-dev/spl-254/1.0.0.dev/scripts/sample-images.zip
unzip sample-images.zip
cd sample-images

</code><button class="button button--text button--small copy-button js-copy-button-0" title="" data-original-title="Copied"><ql-icon>content_copy</ql-icon></button></pre>
<p>There is now a <strong>sample-images</strong> directory with several sample images (for example, <em>happy_face.jpg</em>). In the next steps, you will get presigned URLs to upload these images to generate a photo book.</p>
<ol start="36">
<li>To get presigned URLs to upload images, run the following commands in the AWS Cloud9 terminal window. Replace <strong>(USER NAME)</strong>, <strong>(ALBUM NAME)</strong>, <strong>(CUSTOM MESSAGE)</strong>, and <strong>(INTEGER VALUE)</strong> with values of your choice, such as in the example below. Replace <strong>(PresignedUrl)</strong> with the invoke URL you copied in the previous task.</li>
</ol>
<p><strong>Note</strong> Keep the quotation marks around the values when you replace them.</p>
<pre class="highlight plaintext"><code>curl -d '{"userName":"(USER NAME)","albumName":"(ALBUM NAME)","message":"(CUSTOM MESSAGE)","numberOfImages":"(INTEGER VALUE)"}' -H "Content-Type: application/json" -X POST (PresignedUrl) | python -m json.tool

</code><button class="button button--text button--small copy-button js-copy-button-1" title="" data-original-title="Copied"><ql-icon>content_copy</ql-icon></button></pre>
<p>Example:</p>
<pre class="highlight plaintext"><code>curl -d '{"userName":"Jane Doe","albumName":"Hawaii Vacation","message":"Our trip to Hawaii in 2019","numberOfImages":"4"}' -H "Content-Type: application/json" -X POST https://xxxx.us-west-2.amazonaws.com/stage/presigned | python -m json.tool
</code><button class="button button--text button--small copy-button js-copy-button-2" title="" data-original-title="Copied"><ql-icon>content_copy</ql-icon></button></pre>
<p>The output includes the file name, bucket name, and presigned URL for each image in the photo book. In the next step, you will upload one of the sample images to each presigned URL. Because you are in the <strong>sample-images</strong> directory, the path to each image is the file name (for example, <em>happy_face.jpg</em>).</p>
<ol start="37">
<li>To upload an image, run the following command. Replace <strong>(PATH_TO_IMAGE_NAME)</strong> with one of the sample image file names, and replace <strong>(PRE_SIGNED_URL)</strong> with the first presigned URL from the previous step.</li>
</ol>
<p><i class="fas fa-chalkboard-teacher" style="color:black;"></i> <strong>Note</strong> Keep the quotation marks around the presigned URL.</p>
<pre class="highlight plaintext"><code>curl -X PUT -T (PATH_TO_IMAGE_NAME) "(PRE_SIGNED_URL)"

</code><button class="button button--text button--small copy-button js-copy-button-3" title="" data-original-title="Copied"><ql-icon>content_copy</ql-icon></button></pre>
<p>Repeat this step until you upload all your intended images. Only upload one image to each presigned URL.</p>
<ol start="38">
<li><p>Return to the tab with the AWS Management Console.</p></li>
<li><p>Click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>S3</strong>.</p></li>
<li><p>Navigate to the <strong>xxxx-userimagess3bucket-xxxx</strong> bucket, and inspect the uploaded images. The path is <strong>/Incoming/username/albumname</strong>.</p></li>
</ol>
<h2 id="step9">Task 5: Subscribing to user approval email notification</h2>

<p>During the image-processing state machine flow, once all the images are put into a digital album, an email is sent to the user for approval. The email body contains two links, an approval link and a reject link. Based on the user action, the state moves to the next step. In this task, you subscribe to the Amazon SNS email topic to receive emails.</p>
<ol start="41">
<li><p>In the <strong>AWS Management Console</strong>, click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>Simple Notification Service</strong>.</p></li>
<li><p>In the navigation pane, click <strong>Topics</strong>.</p></li>
<li><p>Click the name of the topic that contains <strong>xxxx-SNSTopicForUserCommunication-xxxx</strong>.</p></li>
<li><p>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;">Create subscription</span></p></li>
<li><p>Configure the following:</p></li>
</ol><ul>
<li>
<strong>Protocol:</strong> Select <strong>Email</strong>
</li>
<li>
<strong>Endpoint:</strong> Enter a valid email address</li>
</ul><ol start="46">
<li>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;">Create subscription</span>
</li>
</ol>
<p>After a brief delay, you receive an email to confirm the subscription. You must confirm before the subscription is activated.</p>
<ol start="47">
<li>To confirm the subscription, click the <strong>Confirm subscription</strong> link in the email.</li>
</ol>


<h2 id="step10">Task 6: Making the digital album</h2>

<p>You have uploaded several images, and they are waiting to be processed. In this task, using Step Functions, each image goes through a series of steps starting with metadata extraction, type check, image content validation, resize, and watermarking. The final step is stitching all the images into a single PDF document in the <strong>/Book</strong> folder. This PDF is the final album for you to approve or reject before it is sent for printing. In this task, you will process the images and then download the album to see how it looks.</p>
<ol start="48">
<li><p>Return to the tab with the AWS Cloud9 terminal.</p></li>
<li><p>To trigger the Step Functions state machine, run the following command. Replace <strong>(USER NAME)</strong> and <strong>(ALBUM NAME)</strong> with the values used in the earlier step. Replace <strong>(CreateBookBindingUrl)</strong> with the value from the left side of the lab page.</p></li>
</ol><pre class="highlight plaintext"><code>curl -d '{"userName":"(USER NAME)","albumName":"(ALBUM NAME)"}' -H "Content-Type: application/json" -X POST \
(CreateBookBindingUrl)

</code><button class="button button--text button--small copy-button js-copy-button-4"><ql-icon>content_copy</ql-icon></button></pre><ol start="50">
<li><p>Return to the tab with the AWS Management Console.</p></li>
<li><p>Click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>S3</strong>.</p></li>
<li><p>Navigate to the <strong>xxxx-userimagess3bucket-xxxx</strong> bucket, and inspect the various folders. The <strong>Book</strong> folder contains the final PDF digital album for approval.</p></li>
<li><p>Click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>Step Functions</strong>.</p></li>
<li><p>Click the name of the state machine that contains <strong>ImageProcessStateMachine-xxxx</strong>.</p></li>
<li><p>In the <strong>Executions</strong> section, click the name of the most recent state.</p></li>
</ol>
<p>In the <strong>Visual workflow</strong> section, you can see that human action is required to proceed to the next step in this workflow.</p>

<p>You receive an email to approve a Step Functions execution.</p>
<ol start="56">
<li><p>To confirm the execution, click the approval link in the email.</p></li>
<li><p>Inspect the state machine workflow again.</p></li>
</ol>
<p>The PDF album was approved, and now a message has been placed into an Amazon SQS queue for the third-party vendor to pick up for printing the the physical book.</p>
<ol start="58">
<li>Click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>Simple Queue Service</strong>.</li>
</ol>
<p>Notice the message in the <strong>xxxx-BookPrintQueue-xxxx</strong> queue.</p>



<h2 id="step11">Task 7: Setting up the book printing state machine</h2>

<p>This task walks you through setting up a Step Functions state machine. This state machine reads the messages from the Amazon SQS print queue from the previous task, sends the messages to the third-party print vendor, and finally sends an email to the customer saying the book has shipped.</p>
<ol start="59">
<li><p>In the <strong>AWS Management Console</strong>, click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>Step Functions</strong>.</p></li>
<li><p>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;">Create state machine</span></p></li>
<li><p>For <strong>Type</strong>, select <strong>Standard</strong>.</p></li>
<li><p>In the <strong>Definition</strong> section, replace the sample code snippet with the following code.</p></li>
</ol><pre class="highlight plaintext"><code>{
  "Comment": "This state machine is to send request to 3rd party",
  "StartAt": "RequestSentTo3rdParty",
  "States": {
    "RequestSentTo3rdParty": {
          "Type": "Task",
          "Resource": "{PrintVendorLambdaArn}",
          "InputPath": "$",
          "ResultPath": "$.extractedMetadata",
          "Next": "UpdateFrom3rdParty"
        },
        "UpdateFrom3rdParty": {
          "Type": "Choice",
          "Choices": [
            {
              "Variable": "$.extractedMetadata.shippingStatus",
              "StringEquals": "Shipped",
              "Next": "Shipped"
            },
            {
              "Variable": "$.extractedMetadata.shippingStatus",
              "StringEquals": "FailedForPayment",
              "Next": "FailedToProcess"
            }
          ]
        },
        "Shipped": {
          "Type": "Pass",
          "Next": "NotifyUser(SNS)"
        },
        "FailedToProcess": {
          "Type": "Pass",
          "Next": "NotifyUser(SNS)"
        },
        "NotifyUser(SNS)": {
          "Type": "Task",
           "Resource": "arn:aws:states:::sns:publish",
           "Parameters": {
             "TopicArn": "{SNSTopicForUserCommunicationArn}",
             "Message.$": "$.extractedMetadata.message",
             "MessageAttributes": {
               "msg": {
                 "DataType": "String",
                 "StringValue": "additional instructions!"
               }
             }
           },
           "End": true
          }
    }
}
</code><button class="button button--text button--small copy-button js-copy-button-5"><ql-icon>content_copy</ql-icon></button></pre><ol start="63">
<li><p>In the definition, replace <strong>{PrintVendorLambdaArn}</strong> with the <strong>PrintVendorLambdaArn</strong> value from the left side of the lab page.</p></li>
<li><p>In the definition, replace <strong>{SNSTopicForUserCommunicationArn}</strong> with the <strong>SNSTopicForUserCommunicationArn</strong> value from the left side of the lab page.</p></li>
<li><p>Refresh the state machine diagram. The updated diagram looks like the following.</p></li>
</ol>
<p><img src="./Building Serverless Applications with an Event-Driven Architecture_files/bookprint-statemachine.png" alt="Bookprint state machine diagram"></p>
<ol start="66">
<li><p>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;">Next</span></p></li>
<li><p>Configure the following:</p></li>
</ol><ul>
<li>
<strong>Name:</strong> Enter <input readonly="" class="copyable-inline-input" size="21" type="text" value="BookprintStateMachine">
</li>
<li>
<strong>Permissions:</strong> Select <strong>Choose an existing role</strong>
</li>
<li>
<strong>Existing roles:</strong> Select <strong>xxxx-StateMachineRole-xxxx</strong>
</li>
</ul><ol start="68">
<li><p>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;">Create state machine</span></p></li>
<li><p>Copy the <strong>BookprintStateMachine</strong> Amazon Resource Name (ARN) to a text editor to use later. The ARN looks similar to the following: arn:aws:states:us-west-2:xxxx:stateMachine:BookprintStateMachine.</p></li>
</ol>
<p>The state machine setup is now complete. In the next few steps, you map this state machine ARN to the <strong>xxxx-PrintVendorTriggerFuncti-xxxx</strong> Lambda function.</p>
<ol start="70">
<li><p>In the <strong>AWS Management Console</strong>, click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>Lambda</strong>.</p></li>
<li><p>In the search box, type <strong>PrintVendorTrigger</strong>, and press ENTER.</p></li>
<li><p>Click the name of the <strong>xxxx-PrintVendorTriggerFuncti-xxxx</strong> function.</p></li>
<li><p>In the <strong>Environment variables</strong> section, click  <span style="background-color:white;font-weight:bold;font-size:90%;color:#545b64;border-color:#545b64;border-radius:2px;border-width:1px;border-style:solid;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Edit </span></p></li>
<li><p>Replace the value for <strong>STATE_MACHINE_ARN</strong> with the BookprintStateMachine ARN that you copied in a previous step.</p></li>
<li><p>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;border-color:grey;">Save</span></p></li>
</ol>
<p>There is one step left before pushing the books to the third-party vendor. At this time, the Amazon SQS queue is holding messages, but there is no consumer to pick up those messages. Let's enable the consumer so that the BookprintStateMachine kicks in and sends the books to the third-party vendor.</p>
<ol start="76">
<li><p>In the <strong>AWS Management Console</strong>, click <span style="background-color:#232f3e;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Services <i class="fas fa-angle-down"></i></span> and select <strong>Simple Queue Service</strong>.</p></li>
<li><p>On the left, click the bars menu, then click <strong>Queues</strong>.</p></li>
<li><p>Select <i class="far fa-dot-circle"></i> <strong>xxxx-BookPrintQueue-xxxx</strong> queue.</p></li>
<li><p>Click <span style="background-color:white;font-weight:bold;font-size:90%;color:#545b64;border-color:#545b64;border-radius:2px;border-width:1px;border-style:solid;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">Actions</span> and then select <strong>Configure Lambda function trigger</strong>.</p></li>
<li><p>From the <strong>Select a Lambda Function</strong> menu, select <strong>xxxx-PrintVendorTriggerFuncti-xxxx</strong>.</p></li>
<li><p>Click <span style="background-color:#ec7211;font-weight:bold;font-size:90%;color:white;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;white-space: nowrap;">Save</span></p></li>
<li><p>Navigate to the <strong>Step Functions</strong> console, open the <strong>BookprintStateMachine</strong> state machine, and check for any successful executions.</p></li>
</ol>
<p>After a couple of minutes, you receive an email indicating that your photo album has shipped.</p>

<p><strong>Note</strong> See the <a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#appendix" target="_blank">Appendix</a> to learn about AWS Lambda layers. This lab used Lambda layers in a few of its Lambda functions.</p>



<h2 id="step12">Conclusion</h2>

<p><i class="far fa-thumbs-up" style="color:blue;"></i> Congratulations! You now have successfully:</p>
<ul>
<li>Understood an event-driven architecture</li>
<li>Understood how Step Functions is configured to orchestrate serverless applications</li>
<li>Taken advantage of Amazon SQS and SNS</li>
<li>Created and configured Lambda functions and API Gateway resources</li>
<li>Made configuration updates to restore API functionality</li>
</ul>
<h2 id="step13">End Lab</h2>

<p>Follow these steps to close the console, end your lab, and evaluate the experience.</p>
<ol start="83">
<li><p>Return to the AWS Management Console.</p></li>
<li><p>On the navigation bar, click <strong>awsstudent@&lt;AccountNumber&gt;</strong>, and then click <strong>Sign Out</strong>.</p></li>
<li><p>Click <span style="background-color:#D93025;font-family:Google Sans;font-weight:bold;font-size:90%;color:white;border-color:#D93025;border-radius:4px;border-width:2px;border-style:solid;padding-top:5px;padding-bottom:5px;padding-left:10px;padding-right:10px;">End Lab</span></p></li>
<li><p>Click <span style="background-color:#DEDEDE;font-family:Google Sans;font-weight:bold;font-size:90%;color:#444;border-width:1px;border-style:solid;border-color:#444;padding-top:3px;padding-bottom:3px;padding-left:10px;padding-right:10px;">OK</span></p></li>
<li><p>(Optional):</p></li>
</ol><ul>
<li>Select the applicable number of stars <i class="far fa-star"></i>
</li>
<li>Type a comment</li>
<li>
<p>Click <strong>Submit</strong></p>
<ul>
<li>1 star = Very dissatisfied</li>
<li>2 stars = Dissatisfied</li>
<li>3 stars = Neutral</li>
<li>4 stars = Satisfied</li>
<li>5 stars = Very satisfied</li>
</ul>
</li>
</ul>
<p>You may close the dialog if you don't want to provide feedback.</p>

<h2 id="step14">Additional resources</h2>

<p>For more information about AWS Training and Certification, see <a href="http://aws.amazon.com/training/" target="_blank"><em>http://aws.amazon.com/training/</em></a>.</p>

<p><em>Your feedback is welcome and appreciated</em><br>
If you would like to share any feedback, suggestions, or corrections, please provide the details in our <a href="https://support.aws.amazon.com/#/contacts/aws-training" target="_blank"><em>AWS Training and Certification Contact Form</em></a>.</p>

<p><a id="appendix" target="_blank"></a></p>

<h2 id="step15">Appendix</h2>

<h3>AWS Lambda layers</h3>

<p>You can configure your Lambda function to pull in additional code and content as layers. A layer is a ZIP archive that contains libraries, a custom runtime, or other dependencies. With layers, you can use libraries in your function without needing to include them in your deployment package. Layers let you keep your deployment package small, which makes development easier. You can avoid errors that can occur when you install and package dependencies with your function code. For Node.js, Python, and Ruby functions, you can develop your function code in the Lambda console as long as you keep your deployment package under 3 MB.</p>

<p>This lab used Lambda layers in the following functions:</p>
<ul>
<li><strong>xxxx-WatermarkFunction-xxxx</strong></li>
<li><strong>xxxx-ResizeFunction-xxxx</strong></li>
<li><strong>xxxx-ExtractImageMetadataFunction-xxxx</strong></li>
</ul>
<p>Open these Lambda functions and notice the use of one common AWS Lambda layer, <strong>image-magick-layer-xxxx</strong>. You can use the same layer across many Lambda functions to keep your code modular and concise.</p>

<p>For more information about Lambda layers, see the AWS Compute Blog at <a href="https://aws.amazon.com/blogs/compute/working-with-aws-lambda-and-lambda-layers-in-aws-sam/" target="_blank"><em>https://aws.amazon.com/blogs/compute/working-with-aws-lambda-and-lambda-layers-in-aws-sam/</em></a>.</p>

</div>
</div>


<div class="hidden js-end-lab-button-container lab-content__end-lab-button">
<ql-lab-control-button class="js-end-lab-button" running=""></ql-lab-control-button>
</div>
<!-- / TODO: Move recommendations into the end lab modal -->
<div class="lab-content__renderable-instructions">
<div class="lab-content__recommendation">
<h4 class="headline-3">
Ready for more?
<p>Here's another lab we think you'll like.</p>
<div class="content-card-grid">
<div class="card-content-wrapper js-content-card" data-id="2543" data-level="Introductory" data-name="Introduction to Amazon Simple Storage Service (S3)" data-type="Lab">
<a class="card card--content elevation-0 content-lab" href="https://www.qwiklabs.com/focuses/15683?parent=catalog"><div class="card__image">
<div class="card__image__inner" style="background-image: url(https://cdn.qwiklabs.com/assets/fractal2-a4905334374c9d90765c63535f0fc66eb81d5f18f7416db5bea58901744cc5d0.jpg)"></div>
</div>
<div class="card__body">
<div class="overline card--content__type">
Lab
</div>
<h3 class="card--content__title">
Introduction to Amazon Simple Storage Service (S3)
</h3>
<div class="card--content__description body-1">
<p>
This lab demonstrates how to use an Amazon S3 bucket and manage files, or object, that are stored in the bucket. You will practice how to create a bucket, add an object, view an object, move an object, and delete an object and bucket in the AWS Management Console.
</p>
</div>
</div>
<div class="card__footer">
<div class="card__footer__left">
<span>Introductory</span>
</div>
<div class="card__footer__right">
<div class="rateit" data-rateit-readonly="true" data-rateit-value="4.5319"><div class="rateit-reset" style="display: none;"></div><div class="rateit-range" style="width: 80px; height: 16px;"><div class="rateit-selected" style="height: 16px; width: 72.5104px;"></div><div class="rateit-hover" style="height:16px"></div></div></div>
</div>
</div>
</a></div>

</div>
</h4>
</div>

</div>
</ql-drawer-content>
<ql-drawer end="" id="outline-drawer" open="" slot="drawer" width="320" style="width: 320px;">
<div class="js-lab-content-outline lab-content__outline">
<a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step1" class="">Self-Paced Lab 254</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step2" class="">Lab overview</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step3" class="">Access the AWS Management Console</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step4" class="">Start Lab</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step5" class="">Task 1: Understanding the architecture and underlying services</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step6" class="">Task 2: Setting up a Lambda function to generate presigned URLs</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step7" class="">Task 3: Creating a presigned API resource</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step8" class="is-active">Task 4: Uploading sample images</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step9">Task 5: Subscribing to user approval email notification</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step10">Task 6: Making the digital album</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step11">Task 7: Setting up the book printing state machine</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step12">Conclusion</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step13">End Lab</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step14">Additional resources</a><a href="https://www.qwiklabs.com/focuses/12762?parent=catalog#step15">Appendix</a>
</div>
</ql-drawer>
</ql-drawer-container>
</ql-drawer-content>
</ql-drawer-container>
<div class="lab-introduction js-lab-introduction is-hidden">
<div class="lab-introduction__inner">
<h1 class="headline-1">Welcome to Your First Lab!</h1>
<ql-icon-button class="js-skip-button">close</ql-icon-button>
<div class="lab-introduction__video">
<iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" id="lab-introduction" src="./Building Serverless Applications with an Event-Driven Architecture_files/yF7EDXKTmoQ.html"></iframe>
</div>
<a class="js-skip-button button button--outline">Skip this video</a>
</div>
</div>



</div>
</main>
<div class="modal fade" id="lab-details-modal">
<div class="modal-container">
<div class="mdl-shadow--24dp modal-content">
<div class="modal-body">
<p class="l-mbm">
This lab demonstrates how to design and develop applications based on an event-driven architecture with a serverless stack. The key services used in this lab are AWS Step Functions, Amazon API Gateway, AWS Lambda, Amazon SQS, Amazon SNS, Amazon S3, Amazon DynamoDB, and Amazon Rekognition.
</p>
<p class="small-label l-mbs">
<strong>
Duration:
</strong>
2m setup
·
90m access
·
90m completion
</p>
<p class="small-label l-mbs">
<strong>AWS Region:</strong>
[us-west-2] <strong>US West (Oregon)</strong>
</p>
<p class="small-label l-mbs">

</p>
<p class="small-label">
<strong>
Permalink:
</strong>
<a href="https://www.qwiklabs.com/catalog_lab/2787">https://www.qwiklabs.com/catalog_lab/2787</a>
</p>
</div>
<div class="modal-actions">
<a class="button button--text" data-dismiss="modal">
Got It
</a>
</div>


</div>
</div>
<iframe class="l-ie-iframe-fix" src="./Building Serverless Applications with an Event-Driven Architecture_files/saved_resource(3).html"></iframe>
</div>
<div class="modal fade" id="lab-review-modal" style="display: none;">
<div class="modal-container">
<div class="mdl-shadow--24dp modal-content">
<form class="simple_form js-lab-review-form" id="new_lab_review" action="https://www.qwiklabs.com/lab_reviews" accept-charset="UTF-8" data-remote="true" method="post"><input name="utf8" type="hidden" value="✓"><div class="modal-body">
<p class="label">
How satisfied are you with this lab?*
</p>
<div class="rateit js-rateit" data-rateit-max="5" data-rateit-min="0" data-rateit-resetable="false" data-rateit-step="1" data-rateit-value="0"><div class="rateit-reset" style="display: none;"></div><div class="rateit-range" style="width: 80px; height: 16px;"><div class="rateit-selected" style="height: 16px; width: 16px; display: block;"></div><div class="rateit-hover" style="height: 16px; width: 0px; display: none;"></div></div></div>
<div class="l-mtm">

<div class="control-group hidden lab_review_user_id"><div class="controls"><input class="hidden" type="hidden" value="4265112" name="lab_review[user_id]" id="lab_review_user_id"></div></div>
<div class="control-group hidden lab_review_classroom_id"><div class="controls"><input class="hidden" type="hidden" name="lab_review[classroom_id]" id="lab_review_classroom_id"></div></div>
<div class="control-group hidden lab_review_lab_id"><div class="controls"><input class="hidden" type="hidden" value="2787" name="lab_review[lab_id]" id="lab_review_lab_id"></div></div>
<div class="control-group hidden lab_review_focus_id"><div class="controls"><input class="hidden" type="hidden" name="lab_review[focus_id]" id="lab_review_focus_id"></div></div>
<div class="control-group hidden lab_review_rating"><div class="controls"><input class="hidden js-rating-input" type="hidden" name="lab_review[rating]" id="lab_review_rating" value="-2"></div></div>
<div class="control-group text optional lab_review_comment"><label class="text optional control-label" for="lab_review_comment">Comment</label><div class="controls"><textarea class="text optional" name="lab_review[comment]" id="lab_review_comment"></textarea></div></div>
</div>
</div>
<div class="modal-actions">
<a class="button button--text" data-dismiss="modal">
Cancel
</a>
<input type="submit" name="commit" value="Submit" id="submit" data-disabled="false" class="button" data-disable-with="Submit">
</div>
</form>

</div>
</div>
<iframe class="l-ie-iframe-fix" src="./Building Serverless Applications with an Event-Driven Architecture_files/saved_resource(4).html"></iframe>
</div>
<div class="modal fade" id="lab-access-modal" style="display: none;">
<div class="modal-container">
<div class="mdl-shadow--24dp modal-content">
<a class="lab-access-modal-close" data-analytics-action="dismissed_lab_payment_modal" data-dismiss="modal">
<i class="material-icons">close</i>
</a>
<form class="js-lab-access-form" action="https://www.qwiklabs.com/lab_onetime_coupons/activate?parent=catalog" accept-charset="UTF-8" data-remote="true" method="post"><input name="utf8" type="hidden" value="✓">
<div class="modal-body">
<div class="lab-access-modal">
<input type="hidden" name="id" id="id" value="12762">
<input type="hidden" name="user_id" id="user_id" value="4265112">
<input type="hidden" name="launch_with_credits" id="launch_with_credits" value="0" class="js-launch-with-credits-input">
<input type="hidden" name="launch_with_subs" id="launch_with_subs" value="1" class="js-launch-with-subscription-input">
<div class="lab-access-modal__method">
<p>
This lab costs
10 Credits.
</p>
<p>
You have a valid subscription package. Would you like to charge this lab to your subscription?

</p>
<a class="button js-launch-with-subscription-button js-lab-access-modal-button" data-analytics-action="clicked_launch_with_subscription_button">
Use Subscription
</a>
</div>
<div class="lab-access-modal__method">
<p>
Enter Lab Access Code:
</p>
<div class="lab-access-modal__code js-access-code">
<input type="text" name="uuid_1" id="uuid_1" value="" maxlength="4" placeholder="1234" class="js-access-code-input">
<input type="text" name="uuid_2" id="uuid_2" value="" maxlength="4" placeholder="1234" class="js-access-code-input">
<input type="text" name="uuid_3" id="uuid_3" value="" maxlength="4" placeholder="1234" class="js-access-code-input">
<input type="text" name="uuid_4" id="uuid_4" value="" maxlength="4" placeholder="1234" class="js-access-code-input">
</div>
<a class="button js-launch-with-access-code-button js-lab-access-modal-button" data-analytics-action="clicked_launch_with_access_code_button">
Launch with Access Code
</a>
</div>
</div>
</div>
</form>



</div>
</div>
<iframe class="l-ie-iframe-fix" src="./Building Serverless Applications with an Event-Driven Architecture_files/saved_resource(5).html"></iframe>
</div>

<script>
  $( function() {
    ql.initMaterialInputs();
    initChosen();
    initSearch();
    initTabs();
    ql.list.init();
    ql.favoriting.init();
    ql.header.myAccount.init();
    initTooltips();
    ql.autocomplete.init();
    ql.modals.init();
    ql.toggleButtons.init();
    ql.analytics.init();
    ql.favoriting.init();
  ql.labControlPanel.addRecaptchaErrorHandler();
  initLabContent();
  ql.labOutline.links.init();
  initLabReviewModal();
  initLabAccessModal();
  ql.labAssessment.init();
  ql.labData.init();
  initLabTranslations( {"are_you_sure":"All done? If you end this lab, you will lose all your work. You may not be able to restart the lab if there is a quota limit. Are you sure you want to end this lab?\n","in_progress":"*In Progress*","ending":"*Ending*","starting":"*Starting, please wait*","end_concurrent_labs":"Sorry, you can only run one lab at a time. To start this lab, please confirm that you want all of your existing labs to end.\n","copied":"Copied","no_resource":"Error retrieving resource.","no_support":"No Support","mac_press":"Press ⌘-C to copy","thanks_review":"Thanks for reviewing this lab.","windows_press":"Press Ctrl-C to copy","days":"days"} );
  ql.labRun.init();
  ql.chat.init();
  ql.initHeader();
  ql.navigation.init();
  ql.navPanel.init();
  ql.navigation.init();
  
  });
</script>
<style>
  .mdl-layout__container {
    position: static
  }
</style>


<iframe data-product="web_widget" title="No content" tabindex="-1" aria-hidden="true" src="./Building Serverless Applications with an Event-Driven Architecture_files/saved_resource(6).html" style="width: 0px; height: 0px; border: 0px; position: absolute; top: -9999px;"></iframe><div><div class="grecaptcha-badge" data-style="bottomright" style="width: 256px; height: 60px; display: block; transition: right 0.3s ease 0s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;"><div class="grecaptcha-logo"><iframe src="./Building Serverless Applications with an Event-Driven Architecture_files/anchor(2).html" width="256" height="60" role="presentation" name="a-8z42y1rcj4p1" frameborder="0" scrolling="no" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox"></iframe></div><div class="grecaptcha-error"></div><textarea id="g-recaptcha-response-100000" name="g-recaptcha-response" class="g-recaptcha-response" style="width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;"></textarea></div></div><div><iframe title="Opens a widget where you can chat to one of our agents" id="launcher" tabindex="-1" style="width: 109px; height: 50px; padding: 0px; margin: 10px 20px; position: fixed; bottom: 30px; overflow: visible; opacity: 0; border: 0px; z-index: 999998; transition-duration: 250ms; transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1); transition-property: opacity, top, bottom; top: -9999px; visibility: hidden;" src="./Building Serverless Applications with an Event-Driven Architecture_files/saved_resource(7).html"></iframe><iframe title="Find more information here" id="webWidget" tabindex="-1" style="width: 374px; max-height: calc(100vh - 32px); height: 572px; position: fixed; opacity: 0; border: 0px; transition-duration: 250ms; transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1); transition-property: opacity, top, bottom; top: -9999px; visibility: hidden; z-index: 999999;" src="./Building Serverless Applications with an Event-Driven Architecture_files/saved_resource(8).html"></iframe></div><div style="background-color: rgb(255, 255, 255); border: 1px solid rgb(204, 204, 204); box-shadow: rgba(0, 0, 0, 0.2) 2px 2px 3px; position: absolute; transition: visibility 0s linear 0.3s, opacity 0.3s linear 0s; opacity: 0; visibility: hidden; z-index: 2000000000; left: 0px; top: -10000px;"><div style="width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; z-index: 2000000000; background-color: rgb(255, 255, 255); opacity: 0.05;"></div><div class="g-recaptcha-bubble-arrow" style="border: 11px solid transparent; width: 0px; height: 0px; position: absolute; pointer-events: none; margin-top: -11px; z-index: 2000000000;"></div><div class="g-recaptcha-bubble-arrow" style="border: 10px solid transparent; width: 0px; height: 0px; position: absolute; pointer-events: none; margin-top: -10px; z-index: 2000000000;"></div><div style="z-index: 2000000000; position: relative;"><iframe title="recaptcha challenge" src="./Building Serverless Applications with an Event-Driven Architecture_files/bframe.html" name="c-z134547j0mx1" frameborder="0" scrolling="no" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox" style="width: 100%; height: 100%;"></iframe></div></div></body></html>